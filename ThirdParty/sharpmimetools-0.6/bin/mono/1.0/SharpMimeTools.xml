<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Y:\Programas\nant\smt-daily\sharpmimetools-0.6\bin\mono\1.0\release\SharpMimeTools</name>
    </assembly>
    <members>
        <member name="T:anmar.SharpMimeTools.ABNF">
            <summary>
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.CRLF">
            <summary>
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.ALPHA">
            <summary>
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.DIGIT">
            <summary>
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.WSP">
            <summary>
            RFC 2822 Section 2.2.2
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.NO_WS_CTL">
            <summary>
            RFC 2822 Section 3.2.1
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.text">
            <summary>
            RFC 2822 Section 3.2.1
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.quoted_pair">
            <summary>
            RFC 2822 Section 3.2.2
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.FWS">
            <summary>
            RFC 2822 Section 3.2.3
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.ctext">
            <summary>
            RFC 2822 Section 3.2.3
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.ccontent">
            <summary>
            RFC 2822 Section 3.2.3
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.comment">
            <summary>
            RFC 2822 Section 3.2.3
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.CFWS">
            <summary>
            RFC 2822 Section 3.2.3
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.atext">
            <summary>
            RFC 2822 Section 3.2.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.atom">
            <summary>
            RFC 2822 Section 3.2.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.dot_atom">
            <summary>
            RFC 2822 Section 3.2.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.dot_atom_text">
            <summary>
            RFC 2822 Section 3.2.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.DQUOTE">
            <summary>
            RFC 2822 Section 3.2.5
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.qtext">
            <summary>
            RFC 2822 Section 3.2.5
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.qcontent">
            <summary>
            RFC 2822 Section 3.2.5
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.quoted_string">
            <summary>
            RFC 2822 Section 3.2.5
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.word">
            <summary>
            RFC 2822 Section 3.2.6
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.phrase">
            <summary>
            RFC 2822 Section 3.2.6
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.address">
            <summary>
            RFC 2822 Section 3.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.mailbox">
            <summary>
            RFC 2822 Section 3.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.name_addr">
            <summary>
            RFC 2822 Section 3.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.angle_addr">
            <summary>
            RFC 2822 Section 3.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.group">
            <summary>
            RFC 2822 Section 3.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.mailbox_list">
            <summary>
            RFC 2822 Section 3.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.address_list">
            <summary>
            RFC 2822 Section 3.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.local_part">
            <summary>
            RFC 2822 Section 3.4.1
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.domain">
            <summary>
            RFC 2822 Section 3.4.1
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.domain_literal">
            <summary>
            RFC 2822 Section 3.4.1
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.dtext">
            <summary>
            RFC 2822 Section 3.4.1
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.dcontent">
            <summary>
            RFC 2822 Section 3.4.1
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.addr_spec">
            <summary>
            RFC 2822 Section 3.4.1
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.ABNF.address_regex">
            <summary>
            Regular Expression for address (RFC 2822 Section 3.4) definition
            </summary>
        </member>
        <member name="T:anmar.SharpMimeTools.SharpMessage">
            <summary>
            This class provides a simplified way of parsing messages.
            </summary>
            <remarks> All the mime complexity is handled internally and all the content is exposed
            parsed and decoded. The code takes care of comments, RFC 2047, encodings, etc.</remarks>
            <example>Parse a message read from a file enabling the uuencode and ms-tnef decoding and saving attachments to disk.
            <code>
            System.IO.FileStream msg = new System.IO.FileStream("message_file.txt", System.IO.FileMode.Open);
            anmar.SharpMimeTools.SharpMessage message = new anmar.SharpMimeTools.SharpMessage(msg, SharpDecodeOptions.Default|SharpDecodeOptions.DecodeTnef|SharpDecodeOptions.UuDecode);
            msg.Close();
            Console.WriteLine(System.String.Concat("From:    [", message.From, "][", message.FromAddress, "]"));
            Console.WriteLine(System.String.Concat("To:      [", message.To, "]"));
            Console.WriteLine(System.String.Concat("Subject: [", message.Subject, "]"));
            Console.WriteLine(System.String.Concat("Date:    [", message.Date, "]"));
            Console.WriteLine(System.String.Concat("Body:    [", message.Body, "]"));
            if ( message.Attachments!=null ) {
            	foreach ( anmar.SharpMimeTools.SharpAttachment attachment in message.Attachments ) {
            		attachment.Save(System.Environment.CurrentDirectory, false);
            		Console.WriteLine(System.String.Concat("Attachment: [", attachment.SavedFile.FullName, "]"));
            	}
            }
            </code></example>
            <example>This sample shows how simple is to parse an e-mail message read from a file.
            <code>
            System.IO.FileStream msg = new System.IO.FileStream("message_file.txt", System.IO.FileMode.Open);
            anmar.SharpMimeTools.SharpMessage message = new anmar.SharpMimeTools.SharpMessage(msg);
            msg.Close();
            Console.WriteLine(System.String.Concat("From:    [", message.From, "][", message.FromAddress, "]"));
            Console.WriteLine(System.String.Concat("To:      [", message.To, "]"));
            Console.WriteLine(System.String.Concat("Subject: [", message.Subject, "]"));
            Console.WriteLine(System.String.Concat("Date:    [", message.Date, "]"));
            Console.WriteLine(System.String.Concat("Body:    [", message.Body, "]"));
            </code></example>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> that contains the message content</param>
            <remarks>The message content is automatically parsed.</remarks>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> that contains the message content</param>
            <param name="attachments">
                <b>true</b> to allow attachments; <b>false</b> to skip them.</param>
            <param name="html">
                <b>true</b> to allow HTML content; <b>false</b> to ignore the html content.</param>
            <remarks>When the <b>attachments</b> parameter is true it's equivalent to adding <b>anmar.SharpMimeTools.MimeTopLevelMediaType.application</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.audio</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.image</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.video</b> to the allowed <see cref="T:anmar.SharpMimeTools.MimeTopLevelMediaType" />.<br /><b>anmar.SharpMimeTools.MimeTopLevelMediaType.text</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.multipart</b> and <b>anmar.SharpMimeTools.MimeTopLevelMediaType.message</b> are allowed in any case.<br /><br />
            In order to have better control over what is parsed, see the other contructors.
            </remarks>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.IO.Stream,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> that contains the message content</param>
            <param name="attachments">
                <b>true</b> to allow attachments; <b>false</b> to skip them.</param>
            <param name="html">
                <b>true</b> to allow HTML content; <b>false</b> to ignore the html content.</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path on which to save the attachments found.</param>
            <remarks>When the <b>attachments</b> parameter is true it's equivalent to adding <b>anmar.SharpMimeTools.MimeTopLevelMediaType.application</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.audio</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.image</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.video</b> to the allowed <see cref="T:anmar.SharpMimeTools.MimeTopLevelMediaType" />.<br /><b>anmar.SharpMimeTools.MimeTopLevelMediaType.text</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.multipart</b> and <b>anmar.SharpMimeTools.MimeTopLevelMediaType.message</b> are allowed in any case.<br /><br />
            In order to have better control over what is parsed, see the other contructors.
            </remarks>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.IO.Stream,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> that contains the message content</param>
            <param name="attachments">
                <b>true</b> to allow attachments; <b>false</b> to skip them.</param>
            <param name="html">
                <b>true</b> to allow HTML content; <b>false</b> to ignore the html content.</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path on which to save the attachments found.</param>
            <param name="preferredtextsubtype">A <see cref="T:System.String" /> specifying the subtype to select for text parts that contain aternative content (plain, html, ...). Specify the <b>null</b> reference to maintain the default behavior (prefer whatever the originator sent as the preferred part). If there is not a text part with this subtype, the default one is used.</param>
            <remarks>When the <b>attachments</b> parameter is true it's equivalent to adding <b>anmar.SharpMimeTools.MimeTopLevelMediaType.application</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.audio</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.image</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.video</b> to the allowed <see cref="T:anmar.SharpMimeTools.MimeTopLevelMediaType" />.<br /><b>anmar.SharpMimeTools.MimeTopLevelMediaType.text</b>, <b>anmar.SharpMimeTools.MimeTopLevelMediaType.multipart</b> and <b>anmar.SharpMimeTools.MimeTopLevelMediaType.message</b> are allowed in any case.<br /><br />
            In order to have better control over what is parsed, see the other contructors.
            </remarks>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.IO.Stream,anmar.SharpMimeTools.MimeTopLevelMediaType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> that contains the message content</param>
            <param name="types">A <see cref="T:anmar.SharpMimeTools.MimeTopLevelMediaType" /> value that specifies the allowed Mime-Types to being decoded.</param>
            <param name="html">
                <b>true</b> to allow HTML content; <b>false</b> to ignore the html content.</param>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.IO.Stream,anmar.SharpMimeTools.MimeTopLevelMediaType,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> that contains the message content</param>
            <param name="types">A <see cref="T:anmar.SharpMimeTools.MimeTopLevelMediaType" /> value that specifies the allowed Mime-Types to being decoded.</param>
            <param name="html">
                <b>true</b> to allow HTML content; <b>false</b> to ignore the html content.</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path on which to save the attachments found.</param>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.IO.Stream,anmar.SharpMimeTools.MimeTopLevelMediaType,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> that contains the message content</param>
            <param name="types">A <see cref="T:anmar.SharpMimeTools.MimeTopLevelMediaType" /> value that specifies the allowed Mime-Types to being decoded.</param>
            <param name="html">
                <b>true</b> to allow HTML content; <b>false</b> to ignore the html content.</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path on which to save the attachments found.</param>
            <param name="preferredtextsubtype">A <see cref="T:System.String" /> specifying the subtype to select for text parts that contain aternative content (plain, html, ...). Specify the <b>null</b> reference to maintain the default behavior (prefer whatever the originator sent as the preferred part). If there is not a text part with this subtype, the default one is used.</param>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.IO.Stream,anmar.SharpMimeTools.SharpDecodeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> that contains the message content</param>
            <param name="options">
                <see cref="T:anmar.SharpMimeTools.SharpDecodeOptions" /> to determine how to do the decoding (must be combined as a bit map).</param>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.IO.Stream,anmar.SharpMimeTools.SharpDecodeOptions,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> that contains the message content</param>
            <param name="options">
                <see cref="T:anmar.SharpMimeTools.SharpDecodeOptions" /> to determine how to do the decoding (must be combined as a bit map).</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path on which to save the attachments found.</param>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.IO.Stream,anmar.SharpMimeTools.SharpDecodeOptions,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> that contains the message content</param>
            <param name="options">
                <see cref="T:anmar.SharpMimeTools.SharpDecodeOptions" /> to determine how to do the decoding (must be combined as a bit map).</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path on which to save the attachments found.</param>
            <param name="preferredtextsubtype">A <see cref="T:System.String" /> specifying the subtype to select for text parts that contain aternative content (plain, html, ...). Specify the <b>null</b> reference to maintain the default behavior (prefer whatever the originator sent as the preferred part). If there is not a text part with this subtype, the default one is used.</param>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.IO.Stream,anmar.SharpMimeTools.MimeTopLevelMediaType,anmar.SharpMimeTools.SharpDecodeOptions,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> that contains the message content</param>
            <param name="types">A <see cref="T:anmar.SharpMimeTools.MimeTopLevelMediaType" /> value that specifies the allowed Mime-Types to being decoded.</param>
            <param name="options">
                <see cref="T:anmar.SharpMimeTools.SharpDecodeOptions" /> to determine how to do the decoding (must be combined as a bit map).</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path on which to save the attachments found.</param>
            <param name="preferredtextsubtype">A <see cref="T:System.String" /> specifying the subtype to select for text parts that contain aternative content (plain, html, ...). Specify the <b>null</b> reference to maintain the default behavior (prefer whatever the originator sent as the preferred part). If there is not a text part with this subtype, the default one is used.</param>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMessage" /> class based on the supplied <see cref="T:System.String" />.
            </summary>
            <param name="message">
                <see cref="T:System.String" /> with the message content</param>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMessage.Attachments">
            <summary>
                <see cref="T:System.Collections.ICollection" /> that contains the attachments found in this message.
            </summary>
            <remarks>Each attachment is a <see cref="T:anmar.SharpMimeTools.SharpAttachment" /> instance.</remarks>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMessage.Body">
            <summary>
            Text body
            </summary>
            <remarks>If there are more than one text part in the message, they are concatenated.</remarks>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMessage.Cc">
            <summary>
            Collection of <see cref="T:anmar.SharpMimeTools.SharpMimeAddress" /> instances found in the <b>Cc</b> header field.
            </summary>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMessage.Date">
            <summary>
            Date
            </summary>
            <remarks>If there is not a <b>Date</b> field present in the headers (or it has an invalid format) then
            the date is extrated from the last <b>Received</b> field. If neither of them are found,
            <b>System.Date.MinValue</b> is returned.</remarks>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMessage.From">
            <summary>
            From's name
            </summary>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMessage.FromAddress">
            <summary>
            From's e-mail address
            </summary>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMessage.HasHtmlBody">
            <summary>
            Gets a value indicating whether the body contains html content
            </summary>
            <value>
                <b>true</b> if the body contains html content; otherwise, <b>false</b></value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMessage.Headers">
            <summary>
                <see cref="T:anmar.SharpMimeTools.SharpMimeHeader" /> instance for this message that contains the raw content of the headers.
            </summary>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMessage.MessageID">
            <summary>
                <b>Message-ID</b> header
            </summary>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMessage.Subject">
            <summary>
                <b>Subject</b> field
            </summary>
            <remarks>The field body is automatically RFC 2047 decoded if it's necessary</remarks>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMessage.To">
            <summary>
            Collection of <see cref="T:anmar.SharpMimeTools.SharpMimeAddress" /> found in the <b>To</b> header field.
            </summary>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.GetHeaderField(System.String)">
            <summary>
            Returns the requested header field body.
            </summary>
            <param name="name">
            </param>
            <returns>
            </returns>
            <remarks>The value if present is uncommented and decoded (RFC 2047).<br />
            If the requested field is not present in this instance, <see cref="F:System.String.Empty" /> is returned instead.</remarks>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMessage.SetUrlBase(System.String)">
            <summary>
            Set the URL used to reference embedded parts from the HTML body (as specified on RFC2392)
            </summary>
            <param name="attachmentsurl">URL used to reference embedded parts from the HTML body.</param>
            <remarks>The supplied URL will be replaced with the following tokens for each attachment:<br /><ul>
                    <li>
                        <b>[MessageID]</b>: Will be replaced with the <see cref="P:anmar.SharpMimeTools.SharpMessage.MessageID" /> of the current instance.</li>
                    <li>
                        <b>[ContentID]</b>: Will be replaced with the <see cref="P:anmar.SharpMimeTools.SharpAttachment.ContentID" /> of the attachment.</li>
                    <li>
                        <b>[Name]</b>: Will be replaced with the <see cref="P:anmar.SharpMimeTools.SharpAttachment.Name" /> of the attachment (or with <see cref="P:System.IO.FileInfo.Name" /> from <see cref="P:anmar.SharpMimeTools.SharpAttachment.SavedFile" /> if the instance has been already saved to disk).</li></ul></remarks>
        </member>
        <member name="T:anmar.SharpMimeTools.SharpAttachment">
            <summary>
            This class provides the basic functionality for handling attachments
            </summary>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpAttachment.#ctor(System.IO.MemoryStream)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpAttachment" /> class based on the supplied <see cref="T:System.IO.MemoryStream" />.
            </summary>
            <param name="stream">
                <see cref="T:System.IO.MemoryStream" /> instance that contains the attachment content.</param>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpAttachment.#ctor(System.IO.FileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpAttachment" /> class based on the supplied <see cref="T:System.IO.FileInfo" />.
            </summary>
            <param name="file">
                <see cref="T:System.IO.MemoryStream" /> instance that contains the info about the attachment.</param>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpAttachment.ContentID">
            <summary>
            Gets or sets the Content-ID of this attachment.
            </summary>
            <value>Content-ID header of this instance. Or the <b>null</b> reference.</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpAttachment.CreationTime">
            <summary>
            Gets or sets the time when the file associated with this attachment was created.
            </summary>
            <value>The time this attachment was last written to.</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpAttachment.Inline">
            <summary>
            Gets or sets value indicating whether the current instance is an inline attachment.
            </summary>
            <value>
                <b>true</b> is it's an inline attachment; <b>false</b> otherwise.</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpAttachment.LastWriteTime">
            <summary>
            Gets or sets the time when the file associated with this attachment was last written to.
            </summary>
            <value>The time this attachment was last written to.</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpAttachment.Name">
            <summary>
            Gets or sets the name of the attachment.
            </summary>
            <value>The name of the attachment.</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpAttachment.MimeMediaSubType">
            <summary>
            Gets or sets top-level media type for this <see cref="T:anmar.SharpMimeTools.SharpAttachment" /> instance
            </summary>
            <value>Top-level media type from Content-Type header field of this <see cref="T:anmar.SharpMimeTools.SharpAttachment" /> instance</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpAttachment.MimeTopLevelMediaType">
            <summary>
            Gets or sets SubType for this <see cref="T:anmar.SharpMimeTools.SharpAttachment" /> instance
            </summary>
            <value>SubType from Content-Type header field of this <see cref="T:anmar.SharpMimeTools.SharpAttachment" /> instance</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpAttachment.Size">
            <summary>
            Gets or sets size (in bytes) for this <see cref="T:anmar.SharpMimeTools.SharpAttachment" /> instance.
            </summary>
            <value>Size of this <see cref="T:anmar.SharpMimeTools.SharpAttachment" /> instance</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpAttachment.SavedFile">
            <summary>
            Gets the <see cref="T:System.IO.FileInfo" /> of the saved file.
            </summary>
            <value>The <see cref="T:System.IO.FileInfo" /> of the saved file.</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpAttachment.Stream">
            <summary>
            Gets the <see cref="T:System.IO.Stream" /> of the attachment.
            </summary>
            <value>The <see cref="T:System.IO.Stream" /> of the attachment.</value>
            <remarks>If the underling stream exists, it's returned. If the file has been saved, it opens <see cref="P:anmar.SharpMimeTools.SharpAttachment.SavedFile" /> for reading.</remarks>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpAttachment.Close">
            <summary>
            Closes the underling stream if it's open.
            </summary>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpAttachment.Save(System.String,System.Boolean)">
            <summary>
            Saves of the attachment to a file in the given path.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path on which to save the attachment.</param>
            <param name="overwrite">
                <b>true</b> if the destination file can be overwritten; otherwise, <b>false</b>.</param>
            <returns>
                <see cref="T:System.IO.FileInfo" /> of the saved file. <b>null</b> when it fails to save.</returns>
            <remarks>If the file was already saved, the previous <see cref="T:System.IO.FileInfo" /> is returned.<br />
            Once the file is successfully saved, the stream is closed and <see cref="P:anmar.SharpMimeTools.SharpAttachment.SavedFile" /> property is updated.</remarks>
        </member>
        <member name="T:anmar.SharpMimeTools.SharpMimeAddress">
            <summary>
            rfc 2822 email address
            </summary>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeAddress.#ctor(System.String)">
            <summary>
            Initializes a new address from a RFC 2822 name-addr specification string
            </summary>
            <param name="dir">RFC 2822 name-addr address</param>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeAddress.Item(System.Object)">
            <summary>
            Gets the decoded address or name contained in the name-addr
            </summary>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeAddress.Length">
            <summary>
            Gets the length of the decoded address
            </summary>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeAddress.ToString">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:anmar.SharpMimeTools.SharpMimeHeader">
            <summary>
            rfc 2822 header of a rfc 2045 entity
            </summary>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeHeader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMimeHeader" /> class from a <see cref="T:System.IO.Stream" /></summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> to read headers from</param>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeHeader.#ctor(System.Byte[])">
            <summary>
            </summary>
            <param name="message">
            </param>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeHeader.#ctor(System.IO.Stream,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMimeHeader" /> class from a <see cref="T:System.IO.Stream" /> starting from the specified point
            </summary>
            <param name="message">the <see cref="T:System.IO.Stream" /> to read headers from</param>
            <param name="startpoint">initial point of the <see cref="T:System.IO.Stream" /> where the headers start</param>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.Item(System.Object)">
            <summary>
            Gets header fields
            </summary>
            <param name="name">field name</param>
            <remarks>Field names is case insentitive</remarks>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.BodyPosition">
            <summary>
            Gets the point where the headers end
            </summary>
            <value>Point where the headers end</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.Cc">
            <summary>
            Gets CC header field
            </summary>
            <value>CC header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.Count">
            <summary>
            Gets the number of header fields found
            </summary>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.ContentDisposition">
            <summary>
            Gets Content-Disposition header field
            </summary>
            <value>Content-Disposition header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.ContentDispositionParameters">
            <summary>
            Gets the elements found in the Content-Disposition header body
            </summary>
            <value>
                <see cref="T:System.Collections.Specialized.StringDictionary" /> with the elements found in the header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.ContentID">
            <summary>
            Gets Content-ID header field
            </summary>
            <value>Content-ID header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.ContentLocation">
            <summary>
            Gets Content-Location header field
            </summary>
            <value>Content-Location header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.ContentLocationParameters">
            <summary>
            Gets the elements found in the Content-Location header body
            </summary>
            <value>
                <see cref="T:System.Collections.Specialized.StringDictionary" /> with the elements found in the header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.ContentTransferEncoding">
            <summary>
            Gets Content-Transfer-Encoding header field
            </summary>
            <value>Content-Transfer-Encoding header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.ContentType">
            <summary>
            Gets Content-Type header field
            </summary>
            <value>Content-Type header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.ContentTypeParameters">
            <summary>
            Gets the elements found in the Content-Type header body
            </summary>
            <value>
                <see cref="T:System.Collections.Specialized.StringDictionary" /> with the elements found in the header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.Date">
            <summary>
            Gets Date header field
            </summary>
            <value>Date header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.Encoding">
            <summary>
            Gets <see cref="T:System.Text.Encoding" /> found on the headers and applies to the body
            </summary>
            <value>
                <see cref="T:System.Text.Encoding" /> for the body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.EncodingDefault">
            <summary>
            Gets or sets the default <see cref="T:System.Text.Encoding" /> used when it isn't defined otherwise.
            </summary>
            <value>The <see cref="T:System.Text.Encoding" /> used when it isn't defined otherwise</value>
            <remarks>The default value is <see cref="T:System.Text.ASCIIEncoding" /> as defined in RFC 2045 section 5.2.<br />
            If you change this value you'll be violating this rfc section.</remarks>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.From">
            <summary>
            Gets From header field
            </summary>
            <value>From header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.RawHeaders">
            <summary>
            Gets Raw headers
            </summary>
            <value>From header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.MessageID">
            <summary>
            Gets Message-ID header field
            </summary>
            <value>Message-ID header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.Reply">
            <summary>
            Gets reply address as defined by <c>rfc 2822</c></summary>
            <value>Reply address</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.ReplyTo">
            <summary>
            Gets Reply-To header field
            </summary>
            <value>Reply-To header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.ReturnPath">
            <summary>
            Gets Return-Path header field
            </summary>
            <value>Return-Path header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.Sender">
            <summary>
            Gets Sender header field
            </summary>
            <value>Sender header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.Subject">
            <summary>
            Gets Subject header field
            </summary>
            <value>Subject header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.SubType">
            <summary>
            Gets SubType from Content-Type header field
            </summary>
            <value>SubType from Content-Type header field</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.To">
            <summary>
            Gets To header field
            </summary>
            <value>To header body</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.TopLevelMediaType">
            <summary>
            Gets top-level media type from Content-Type header field
            </summary>
            <value>Top-level media type from Content-Type header field</value>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeHeader.Version">
            <summary>
            Gets Version header field
            </summary>
            <value>Version header body</value>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeHeader.Close">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeHeader.Contains(System.String)">
            <summary>
            </summary>
            <param name="name">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeHeader.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the header fields
            </summary>
            <returns>A <see cref="T:System.Collections.IEnumerator" /> for the header fields</returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeHeader.GetHeaderField(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns the requested header field body.
            </summary>
            <param name="name">Header field name</param>
            <param name="defaultvalue">Value to return when the requested field is not present</param>
            <param name="uncomment">
                <b>true</b> to uncomment using <see cref="M:anmar.SharpMimeTools.SharpMimeTools.uncommentString(System.String)" />; <b>false</b> to return the value unchanged.</param>
            <param name="rfc2047decode">
                <b>true</b> to decode <see cref="M:anmar.SharpMimeTools.SharpMimeTools.rfc2047decode(System.String)" />; <b>false</b> to return the value unchanged.</param>
            <returns>Header field body</returns>
        </member>
        <member name="T:anmar.SharpMimeTools.SharpMimeMessage">
            <summary>
            rfc 2045 entity
            </summary>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeMessage.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpMimeMessage" /> class from a <see cref="T:System.IO.Stream" /></summary>
            <param name="message">
                <see cref="T:System.IO.Stream" /> to read the message from</param>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeMessage.Item(System.Object)">
            <summary>
            Gets header fields for this entity
            </summary>
            <param name="name">field name</param>
            <remarks>Field names is case insentitive</remarks>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeMessage.Body">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeMessage.BodyDecoded">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeMessage.Disposition">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeMessage.Header">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeMessage.IsBrowserDisplay">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeMessage.IsMultipart">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeMessage.IsTextBrowserDisplay">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeMessage.Name">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeMessage.PartsCount">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpMimeMessage.Size">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeMessage.Close">
            <summary>
            Clears the parts references contained in this instance and calls the <b>Close</b> method in those parts.
            </summary>
            <remarks>This method does not close the underling <see cref="T:System.IO.Stream" /> used to create this instance.</remarks>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeMessage.DumpBody(System.IO.Stream)">
            <summary>
            Dumps the body of this entity into a <see cref="T:System.IO.Stream" /></summary>
            <param name="stream">
                <see cref="T:System.IO.Stream" /> where we want to write the body</param>
            <returns>
                <b>true</b> OK;<b>false</b> if write operation fails</returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeMessage.DumpBody(System.String)">
            <summary>
            Dumps the body of this entity into a file
            </summary>
            <param name="path">path of the destination folder</param>
            <returns>
                <see cref="T:System.IO.FileInfo" /> that represents the file where the body has been saved</returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeMessage.DumpBody(System.String,System.Boolean)">
            <summary>
            Dumps the body of this entity into a file
            </summary>
            <param name="path">path of the destination folder</param>
            <param name="generatename">true if the filename must be generated incase we can't find a valid one in the headers</param>
            <returns>
                <see cref="T:System.IO.FileInfo" /> that represents the file where the body has been saved</returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeMessage.DumpBody(System.String,System.String)">
            <summary>
            Dumps the body of this entity into a file
            </summary>
            <param name="path">path of the destination folder</param>
            <param name="name">name of the file</param>
            <returns>
                <see cref="T:System.IO.FileInfo" /> that represents the file where the body has been saved</returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeMessage.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the parts of a multipart entity
            </summary>
            <returns>A <see cref="T:System.Collections.IEnumerator" /> for the parts of a multipart entity</returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeMessage.GetPart(System.Int32)">
            <summary>
            Returns the requested part of a multipart entity
            </summary>
            <param name="index">index of the requested part</param>
            <returns>A <see cref="T:anmar.SharpMimeTools.SharpMimeMessage" /> for the requested part</returns>
        </member>
        <member name="T:anmar.SharpMimeTools.SharpMimeMessageStream">
            <summary>
            </summary>
        </member>
        <member name="T:anmar.SharpMimeTools.SharpMimeTools">
            <summary>
            </summary>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.parseCharSet(System.String)">
            <summary>
            Parses a <see cref="T:System.Text.Encoding" /> from a charset name
            </summary>
            <param name="charset">charset to parse</param>
            <returns>A <see cref="T:System.Text.Encoding" /> that represents the given <c>charset</c></returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.parseFrom(System.String)">
            <summary>
            Parse a rfc 2822 address specification. rfc 2822 section 3.4
            </summary>
            <param name="from">field body to parse</param>
            <returns>A <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:anmar.SharpMimeTools.SharpMimeAddress" /></returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.parseFrom(System.String,System.Int32)">
            <summary>
            Parse a rfc 2822 name-address specification. rfc 2822 section 3.4
            </summary>
            <param name="from">address</param>
            <param name="part">1 is display-name; 2 is addr-spec</param>
            <returns>the requested <see cref="T:System.String" /></returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.parseDate(System.String)">
            <summary>
            Parse a rfc 2822 date and time specification. rfc 2822 section 3.3
            </summary>
            <param name="date">rfc 2822 date-time</param>
            <returns>A <see cref="T:System.DateTime" /> from the parsed header body</returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.parseHeaderFieldBody(System.String,System.String)">
            <summary>
            Parse a rfc 2822 header field with parameters
            </summary>
            <param name="field">field name</param>
            <param name="fieldbody">field body to parse</param>
            <returns>A <see cref="T:System.Collections.Specialized.StringDictionary" /> from the parsed field body</returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.parserfc2047Header(System.String)">
            <summary>
            Parse and decode rfc 2047 header body
            </summary>
            <param name="header">header body to parse</param>
            <returns>parsed <see cref="T:System.String" /></returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.QuotedPrintable2Unicode(System.String,System.String)">
            <summary>
            Decode rfc 2047 definition of quoted-printable
            </summary>
            <param name="charset">charset to use when decoding</param>
            <param name="orig">
                <c>string</c> to decode</param>
            <returns>the decoded <see cref="T:System.String" /></returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.QuotedPrintable2Unicode(System.Text.Encoding,System.String@)">
            <summary>
            Decode rfc 2047 definition of quoted-printable
            </summary>
            <param name="enc">
                <see cref="T:System.Text.Encoding" /> to use</param>
            <param name="orig">
                <c>string</c> to decode</param>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.rfc2047decode(System.String)">
            <summary>
            rfc 2047 header body decoding
            </summary>
            <param name="word">
                <c>string</c> to decode</param>
            <returns>the decoded <see cref="T:System.String" /></returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.uncommentString(System.String)">
            <summary>
            Remove rfc 2822 comments
            </summary>
            <param name="fieldValue">
                <c>string</c> to uncomment</param>
            <returns>
            </returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.Rfc2392Url(System.String)">
            <summary>
            Encodes a Message-ID or Content-ID following RFC 2392 rules.
            </summary>
            <param name="input">
                <see cref="T:System.String" /> with the Message-ID or Content-ID.</param>
            <returns>
                <see cref="T:System.String" /> with the value encoded as RFC 2392 dictates.</returns>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.UuDecode(System.String)">
            <summary>
            Decodes the provided uuencoded string.
            </summary>
            <param name="input">
                <see cref="T:System.String" /> with the uuendoced content.</param>
            <returns>A <see cref="T:System.Byte" /><see cref="T:System.Array" /> with the uudecoded content. Or the <b>null</b> reference if content can't be decoded.</returns>
            <remarks>The input string must contain the <b>begin</b> and <b>end</b> delimiters.</remarks>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpMimeTools.UuDecodeLine(System.String,System.IO.Stream)">
            <summary>
            Decodes the provided uuencoded line.
            </summary>
            <param name="s">
                <see cref="T:System.String" /> with the uuendoced line.</param>
            <param name="stream">
                <see cref="T:System.IO.Stream" /> where decoded <see cref="T:System.Byte" /> should be written.</param>
            <returns>
                <b>true</b> if content has been decoded and <b>false</b> otherwise.</returns>
        </member>
        <member name="T:anmar.SharpMimeTools.SharpTnefMessage">
            <summary>
            Decodes <a href="http://msdn.microsoft.com/library/en-us/mapi/html/ca148ec3-8586-4c74-8ff8-cd542256e385.asp">ms-tnef</a> streams (those winmail.dat attachments).
            </summary>
            <remarks>Only tnef attributes related to attachments are decoded right now. All the MAPI properties encoded in the stream (rtf body, ...) are ignored. <br />
            While decoding, the cheksum of each attribute is verified to ensure the tnef stream is not corupt.</remarks>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpTnefMessage.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:anmar.SharpMimeTools.SharpTnefMessage" /> class based on the supplied <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="input">
                <see cref="T:System.IO.Stream" /> that contains the ms-tnef strream.</param>
            <remarks>The tnef stream isn't automatically parsed, you must call <see cref="M:anmar.SharpMimeTools.SharpTnefMessage.Parse" /> or <see cref="M:anmar.SharpMimeTools.SharpTnefMessage.Parse(System.String)" />.</remarks>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpTnefMessage.Attachments">
            <summary>
            Gets a <see cref="T:System.Collections.ArrayList" /> instance that contains the attachments found in the tnef stream.
            </summary>
            <value>
                <see cref="T:System.Collections.ArrayList" /> instance that contains the <see cref="T:anmar.SharpMimeTools.SharpAttachment" /> found in the tnef stream. The <b>null</b> reference is retuned when no attachments found.</value>
            <remarks>Each attachment is a <see cref="T:anmar.SharpMimeTools.SharpAttachment" /> instance.</remarks>
        </member>
        <member name="P:anmar.SharpMimeTools.SharpTnefMessage.TextBody">
            <summary>
            Gets a the text body from the ms-tnef stream (<b>BODY</b> tnef attribute).
            </summary>
            <value>Text body from the ms-tnef stream (<b>BODY</b> tnef attribute). Or the <b>null</b> reference if the attribute is not part of the stream.</value>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpTnefMessage.Close">
            <summary>
            Closes and releases the reading resources associated with this instance.
            </summary>
            <remarks>Be carefull before calling this method, as it also close the underlying <see cref="T:System.IO.Stream" />.</remarks>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpTnefMessage.Parse">
            <summary>
            Parses the ms-tnef stream from the provided <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
                <b>true</b> if parsing is successful. <b>false</b> otherwise.</returns>
            <remarks>The attachments found are saved in memory as <see cref="T:System.IO.MemoryStream" /> instances.</remarks>
        </member>
        <member name="M:anmar.SharpMimeTools.SharpTnefMessage.Parse(System.String)">
            <summary>
            Parses the ms-tnef stream from the provided <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path on which to save the attachments found. Specify the <b>null</b> reference to save them in memory as  <see cref="T:System.IO.MemoryStream" /> instances instead.</param>
            <returns>
                <b>true</b> if parsing is successful. <b>false</b> otherwise.</returns>
        </member>
        <member name="T:anmar.SharpMimeTools.SharpDecodeOptions">
            <summary>
            Options used while decoding the message's content.
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.SharpDecodeOptions.DecodeTnef">
            <summary>
            Decode ms-tnef content
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.SharpDecodeOptions.AllowHtml">
            <summary>
            Allow html body parts. If there is no alternative part to the html one, the body part will be ignored
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.SharpDecodeOptions.Default">
            <summary>
            Default options (<b>AllowAttachments</b> and <b>AllowHtml</b>)
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.SharpDecodeOptions.CreateFolder">
            <summary>
            If folder where attachemts are saved does not exist, create it.
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.SharpDecodeOptions.NamedAnchors">
            <summary>
            Add a named anchor to the html body before each body part that has a <b>Content-ID</b> header. The anchor will be named as <b>Message-ID</b>_<b>Content-ID</b></summary>
        </member>
        <member name="F:anmar.SharpMimeTools.SharpDecodeOptions.AllowAttachments">
            <summary>
            Allow attachments.
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.SharpDecodeOptions.None">
            <summary>
            None of the above.
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.SharpDecodeOptions.UuDecode">
            <summary>
            Decode uuencoded content
            </summary>
        </member>
        <member name="T:anmar.SharpMimeTools.MimeTopLevelMediaType">
            <summary>
            RFC 2046 Initial top-level media types
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.MimeTopLevelMediaType.text">
            <summary>
            RFC 2046 section 4.1
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.MimeTopLevelMediaType.image">
            <summary>
            RFC 2046 section 4.2
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.MimeTopLevelMediaType.message">
            <summary>
            RFC 2046 section 5.2
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.MimeTopLevelMediaType.audio">
            <summary>
            RFC 2046 section 4.3
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.MimeTopLevelMediaType.video">
            <summary>
            RFC 2046 section 4.4
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.MimeTopLevelMediaType.application">
            <summary>
            RFC 2046 section 4.5
            </summary>
        </member>
        <member name="F:anmar.SharpMimeTools.MimeTopLevelMediaType.multipart">
            <summary>
            RFC 2046 section 5.1
            </summary>
        </member>
    </members>
</doc>
